name: ci

on:
  push:
    branches:
      - 'handbrake-cli-debug'

#on: [push, pull_request]

jobs:
  build:
    name: Build on Ubuntu
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Cargo-C Toolchain Cache
      id: linux-cargo-c-toolchain
      uses: actions/cache@v3
      with:
        path: |
          ~/.cargo/bin/cargo-capi
          ~/.cargo/bin/cargo-cbuild
          ~/.cargo/bin/cargo-cinstall
        key: linux-cargo-c-toolchain

    - name: Setup Environment
      run: |
        mkdir -p /home/build artifacts
        sudo apt-get update
        sudo apt-get install autoconf automake build-essential libass-dev libbz2-dev libfontconfig1-dev libfreetype6-dev libfribidi-dev libharfbuzz-dev libjansson-dev liblzma-dev libmp3lame-dev libnuma-dev libturbojpeg0-dev libssl-dev
        sudo apt-get install libogg-dev libopus-dev libsamplerate-dev libspeex-dev libtheora-dev libtool libtool-bin libvorbis-dev libx264-dev libxml2-dev libvpx-dev make nasm ninja-build patch tar yasm zlib1g-dev appstream
        sudo pip3 install meson
        sudo apt-get install gstreamer1.0-libav libappindicator-dev libdbus-glib-1-dev libglib2.0-dev libgtk-3-dev libnotify-dev
        sudo apt-get install libva-dev libdrm-dev llvm clang
    - name: Setup Toolchain & repo
      run: |
        rm -rf cmake-3.16.3-Linux-x86_64.tar.gz* cmake-3.16.3-Linux-x86_64
        cd /home/build
        git clone https://github.com/HandBrake/HandBrake.git
        cd HandBrake
        wget https://github.com/HandBrake/HandBrake-toolchains/releases/download/1.0/cmake-3.16.3-Linux-x86_64.tar.gz
        SHA=$(sha1sum cmake-3.16.3-Linux-x86_64.tar.gz)
        EXPECTED="a0f48057d8ccb6d4e50e80c77796466315dd2bfb  cmake-3.16.3-Linux-x86_64.tar.gz"
        if [ "$SHA" == "$EXPECTED" ];
        then
            echo "Extracting CMake"
            tar xvf cmake-3.16.3-Linux-x86_64.tar.gz
        else
            echo "Toolchain Verification FAILED. Exiting!"
            return -1
        fi
    - name: Setup Cargo-C Toolchain
      if: steps.linux-cargo-c-toolchain.outputs.cache-hit != 'true'
      run: |
        cargo install cargo-c
    - name: Build HandBrake Linux
      run: |
         export ARTF=$PWD/artifacts
         cd /home/build/HandBrake
         PWD=$(pwd)
         export PATH=$PWD/cmake-3.16.3-Linux-x86_64/bin:$PATH
         ./configure --enable-qsv  --disable-gtk --enable-vce --enable-nvenc --enable-nvdec LDFLAGS="-static" --launch-jobs=0 --launch >> $ARTF/logs.txt 2>&1
         #git tag --list | grep ^1\.6\.
         #git checkout refs/tags/$(git tag -l | grep -E '^1\.6\.[0-9]+$' | tail -n 1)
         #./configure --launch-jobs=$(nproc) --launch --enable-x265 LDFLAGS="-static" 
         cd build
         cp HandBrakeCLI handbrake-cli
         chmod +x handbrake-cli
         ./handbrake-cli --version
         chmod 777 handbrake-cli
         cp handbrake-cli $ARTF/HandBrakeCLI
         sha256sum ./handbrake-cli > $ARTF/HandBrakeCLI.sha256sum
         md5sum ./handbrake-cli > $ARTF/HandBrakeCLI.md5sum
         echo "Copied to /artifacts"

    - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
      run: |
        ls -al "${PWD}/artifacts"

    - name: move logs
      if: always()
      run: |
        cp "${PWD}/artifacts/logs.txt" "${PWD}/"

    - uses: actions/upload-artifact@v3
      with:
        name: HandBrakeCLI_x86-64
        path: artifacts

    - name: cleanup
      if: always()
      run: |
        rm -rf "${PWD}/artifacts/"

    - uses: stefanzweifel/git-auto-commit-action@v4
      name: commit logs
      if: always()
      with:
        commit_message: 'logging...'
        commit_options: '--no-verify'
        repository: .
        commit_user_name: Nubuki-all
        commit_user_email: 121189493+Nubuki-all@users.noreply.github.com
        commit_author: Nubuki-all <121189493+Nubuki-all@users.noreply.github.com>
          
