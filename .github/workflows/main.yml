name: ci

on:
  push:
    branches:
      - 'main'

#on: [push, pull_request]

jobs:
  build_job:
    # The host should always be linux
    runs-on: ubuntu-22.04
    name: Build on ubuntu20.04 (aarch64)
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          #arch: aarch64
          #distro: ubuntu20.04
          arch: none
          distro: none
          base_image: --platform=linux/arm64/v8 gcc:7.4.0

          # Not required, but speeds up builds
          #githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            artifact_name: git-proot

          # The shell to run commands with in the container
          shell: /bin/sh

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -q -y
            apt-get install -qq git clang-tools-6.0 curl docutils-common gdb lcov libarchive-dev libtalloc-dev strace swig uthash-dev xsltproc

          # Produce a binary artifact and place it in the mounted volume
          run: |
            git clone https://gitlab.com/proot/proot/
            apt purge git -y
            apt autoremove -y
            cd proot
            LDFLAGS=" -static" make -C src proot GIT=false
            mkdir -p dist
            cp src/proot dist/
            cd dist
            sha256sum ./proot > proot.sha256sum
            md5sum ./proot > proot.md5sum
            cd ..
            cp dist/* "/artifacts/${artifact_name}"
            echo "Produced artifact at /artifacts/${artifact_name}"

      - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
        run: |
          ls -al "${PWD}/artifacts/*"
      - uses: actions/upload-artifact@v3
        with:
          name: proot
          path: artifacts/git-proot
