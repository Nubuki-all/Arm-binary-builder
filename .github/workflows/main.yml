name: ci

on:
  push:
    branches:
      - 'handbrake-cli'

#on: [push, pull_request]

jobs:
  build_job:
    # The host should always be linux
    runs-on: ubuntu-22.04
    name: Build on ubuntu20.04 (aarch64)
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          #arch: aarch64
          #distro: ubuntu20.04
          arch: none
          distro: none
          base_image: --platform=linux/arm64/v8 ubuntu:20.04

          # Not required, but speeds up builds
          #githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}/artifacts:/artifacts"

          # Pass some environment variables to the container
          env: | # YAML, but pipe character is necessary
            artifact_name: handbrake-cli-arm64

          # The shell to run commands with in the container
          shell: /bin/sh

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -y
            apt-get -y -qq install autoconf automake autopoint gettext git libtool libtool-bin gperf python3-pip subversion
            pip3 install meson
            apt-get -y -qq install build-essential liblzma-dev libssl-dev
            apt-get -y -qq install libsamplerate-dev make nasm ninja-build patch tar yasm appstream
            mkdir build && cd build && export DIR=$PWD
            git clone https://github.com/numactl/numactl numa && cd numa
            ./autogen.sh
            ./configure --prefix=/usr --disable-shared --enable-static
            make
            make install && cd $DIR
            git clone https://gitlab.freedesktop.org/fontconfig/fontconfig.git font && cd font
            mkdir build && cd build
            meson --prefix=/usr --buildtype=release --prefer-static=true --default-library=static -Ddoc=disabled ..
            ninja
            ninja install && cd $DIR

          # Produce a binary artifact and place it in the mounted volume
          run: |
            git clone -b patch-1 https://github.com/Nubuki-all/HandBrake.git && cd HandBrake
            apt autoremove -y
            #git tag --list | grep ^1\.6\.
            #git checkout refs/tags/$(git tag -l | grep -E '^1\.6\.[0-9]+$' | tail -n 1)

            ./configure --launch-jobs=$(nproc) --launch --disable-gtk --enable-fdk --enable-x265
            cd build
            mv HandBrakeCLI handbrake-cli
            chmod +x handbrake-cli
            ./handbrake-cli --version
            chmod 777 handbrake-cli
            cp handbrake-cli /artifacts/HandBrakeCLI
            sha256sum ./handbrake-cli > /artifacts/HandBrakeCLI.sha256sum
            md5sum ./handbrake-cli > /artifacts/HandBrakeCLI.md5sum
            echo "Copied to /artifacts"

      - name: Show the artifact
        # Items placed in /artifacts in the container will be in
        # ${PWD}/artifacts on the host.
        run: |
          ls -al "${PWD}/artifacts"
      - uses: actions/upload-artifact@v3
        with:
          name: HandBrakeCLI_arm64
          path: artifacts
